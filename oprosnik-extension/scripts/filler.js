/**
 * filler.js - –ü–æ–ª–Ω–∞—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
 * –í–µ—Ä—Å–∏—è: 2.1
 * 
 * –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–ø—Ä–æ—Å–Ω–∏–∫–∞.
 * 1. –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É "–í—Å—Ç–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∑–≤–æ–Ω–∫–µ".
 * 2. –ü–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
 * 3. –ü–æ–ª—É—á–∏–≤ –¥–∞–Ω–Ω—ã–µ, —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏—Ö –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç –≤ –ø–æ–ª–µ "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π".
 */

console.log('üöÄ Oprosnik Helper: Filler Script –Ω–∞—á–∏–Ω–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É...', {
    timestamp: new Date().toISOString(),
    url: window.location.href,
    readyState: document.readyState
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Chrome API
const diagnostics = {
    chromeAvailable: typeof chrome !== 'undefined',
    runtimeAvailable: typeof chrome !== 'undefined' && chrome.runtime,
    sendMessageAvailable: typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.sendMessage,
    browserAvailable: typeof browser !== 'undefined',
    inIframe: window !== window.top,
    protocol: window.location.protocol,
    contentScriptContext: typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.id
};

console.log('üìä –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', diagnostics);

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è API
let messageAPI = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API –¥–ª—è –æ–±–º–µ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
function initializeMessageAPI() {
    if (diagnostics.sendMessageAvailable) {
        messageAPI = chrome.runtime;
        console.log('‚úÖ Chrome API –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return true;
    } else if (diagnostics.browserAvailable && browser.runtime && browser.runtime.sendMessage) {
        messageAPI = browser.runtime;
        console.log('‚úÖ Browser API (Firefox) –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return true;
    } else {
        console.error('‚ùå API —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!');
        return false;
    }
}

// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function safeSendMessage(message, callback) {
    if (!messageAPI) {
        console.error('‚ùå Message API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        callback({ status: 'error', message: 'API —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω' });
        return;
    }

    try {
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:', message);
        messageAPI.sendMessage(message, (response) => {
            if (messageAPI.lastError) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', messageAPI.lastError);
                callback({ 
                    status: 'error', 
                    message: messageAPI.lastError.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' 
                });
            } else {
                console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', response);
                callback(response);
            }
        });
    } catch (error) {
        console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        callback({ 
            status: 'error', 
            message: '–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ' + error.message 
        });
    }
}

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É.
 */
function createPasteButton() {
    console.log('üîç –ü–æ–∏—Å–∫ –º–µ—Å—Ç–∞ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏...');
    
    let attempts = 0;
    const maxAttempts = 10;
    
    const tryCreateButton = () => {
        attempts++;
        let targetButton = document.getElementById('create_inst');
        
        if (!targetButton) {
            console.log(`‚è≥ –ü–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts}: –ö–Ω–æ–ø–∫–∞ "–û—Ç–≤–µ—Ç–∏—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
            
            // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
            const alternativeSelectors = [
                'button[type="submit"]',
                'input[type="submit"]',
                '.btn-primary',
                'button.btn'
            ];
            
            let found = false;
            for (const selector of alternativeSelectors) {
                try {
                    const buttons = document.querySelectorAll(selector);
                    for (const btn of buttons) {
                        if (btn.innerText && btn.innerText.includes('–û—Ç–≤–µ—Ç–∏—Ç—å')) {
                            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–º—É —Å–µ–ª–µ–∫—Ç–æ—Ä—É: ${selector}`);
                            targetButton = btn;
                            found = true;
                            break;
                        }
                    }
                    if (found) break;
                } catch (e) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É:', selector, e);
                }
            }
            
            if (!targetButton) {
                if (attempts < maxAttempts) {
                    setTimeout(tryCreateButton, 500);
                } else {
                    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É "–û—Ç–≤–µ—Ç–∏—Ç—å" –ø–æ—Å–ª–µ', maxAttempts, '–ø–æ–ø—ã—Ç–æ–∫');
                    showDiagnosticInfo();
                }
                return;
            }
        }

        // –ë–æ–ª–µ–µ —Ç–æ—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏
        const nearbyButtons = targetButton.parentElement ? 
            targetButton.parentElement.querySelectorAll('.oprosnik-helper-btn') : [];
        
        let validButtonExists = false;
        nearbyButtons.forEach(btn => {
            if (btn.tagName === 'BUTTON' && btn.innerText.includes('–í—Å—Ç–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ')) {
                validButtonExists = true;
                console.log('‚úÖ –ù–∞—à–∞ –∫–Ω–æ–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
            } else {
                console.log('üîß –£–¥–∞–ª—è–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç:', btn);
                btn.remove();
            }
        });
        
        if (validButtonExists) {
            return;
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–∞—à—É –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É
        const pasteButton = document.createElement('button');
        pasteButton.innerText = '–í—Å—Ç–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∑–≤–æ–Ω–∫–µ';
        pasteButton.type = 'button';
        pasteButton.className = 'btn btn-success ml-2 oprosnik-helper-btn';
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
        pasteButton.style.cssText = 'margin-left: 10px !important; display: inline-block !important; visibility: visible !important; opacity: 1 !important;';
        
        // –î–æ–±–∞–≤–ª—è–µ–º data-–∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        pasteButton.setAttribute('data-extension-id', chrome.runtime?.id || 'unknown');
        pasteButton.setAttribute('data-version', '2.1');
        pasteButton.setAttribute('data-created-at', new Date().toISOString());

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        pasteButton.addEventListener('click', handlePasteButtonClick);

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—É–¥–∞ –≤—Å—Ç–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É
        let inserted = false;
        
        // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 1: –ü–æ—Å–ª–µ —Ü–µ–ª–µ–≤–æ–π –∫–Ω–æ–ø–∫–∏
        try {
            targetButton.insertAdjacentElement('afterend', pasteButton);
            inserted = true;
            console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –≤—Å—Ç–∞–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ —Ü–µ–ª–µ–≤–æ–π –∫–Ω–æ–ø–∫–∏');
        } catch (e) {
            console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏:', e);
        }
        
        // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 2: –í —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        if (!inserted && targetButton.parentElement) {
            try {
                targetButton.parentElement.appendChild(pasteButton);
                inserted = true;
                console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä');
            } catch (e) {
                console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:', e);
            }
        }
        
        // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 3: –í —Ñ–æ—Ä–º—É
        if (!inserted) {
            const form = document.querySelector('form');
            if (form) {
                const actionsDiv = form.querySelector('.form-actions') || form.querySelector('.btn-group') || form;
                actionsDiv.appendChild(pasteButton);
                inserted = true;
                console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ñ–æ—Ä–º—É');
            }
        }
        
        if (inserted) {
            console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ "–í—Å—Ç–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∑–≤–æ–Ω–∫–µ" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∏–¥–∏–º–∞
            setTimeout(() => {
                if (pasteButton.offsetParent === null) {
                    console.error('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞, –Ω–æ –Ω–µ –≤–∏–¥–∏–º–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ CSS.');
                } else {
                    console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∏–º–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
                }
            }, 100);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ API
            addStatusIndicator();
        } else {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏ –æ–¥–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º');
        }
    };
    
    tryCreateButton();
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ API
 */
function addStatusIndicator() {
    const button = document.querySelector('.oprosnik-helper-btn');
    if (!button) return;
    
    const indicator = document.createElement('span');
    indicator.style.cssText = 'margin-left: 5px; font-size: 12px;';
    
    if (messageAPI) {
        indicator.innerHTML = 'üü¢';
        indicator.title = 'API –¥–æ—Å—Ç—É–ø–µ–Ω';
    } else {
        indicator.innerHTML = 'üî¥';
        indicator.title = 'API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
    }
    
    button.appendChild(indicator);
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –Ω–∞—à—É –∫–Ω–æ–ø–∫—É.
 */
function handlePasteButtonClick(event) {
    console.log('üñ±Ô∏è –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞', {
        timestamp: new Date().toISOString(),
        apiAvailable: !!messageAPI
    });
    
    const button = event.target.closest('.oprosnik-helper-btn');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é API
    if (!messageAPI && !initializeMessageAPI()) {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å API');
        alert('–û—à–∏–±–∫–∞: API —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.\n\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n' +
              '1. –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ\n' +
              '2. –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏\n' +
              '3. –ö–æ–Ω—Ñ–ª–∏–∫—Ç —Å –¥—Ä—É–≥–∏–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏\n\n' +
              '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É (F5)');
        return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –∏–¥–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å
    const originalText = button.innerText;
    button.innerText = '–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...';
    button.disabled = true;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ background.js —Å –∑–∞–ø—Ä–æ—Å–æ–º –¥–∞–Ω–Ω—ã—Ö
    safeSendMessage({ action: 'getCallData' }, (response) => {
        console.log('üì® –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞:', response);
        
        if (response && response.status === 'success') {
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã:', response.data);
            pasteDataIntoComment(response.data);
            button.innerText = '–î–∞–Ω–Ω—ã–µ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã!';
            button.style.backgroundColor = '#28a745';
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                button.innerText = originalText;
                button.disabled = false;
                button.style.backgroundColor = '';
            }, 2000);

        } else {
            // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
            const errorMessage = response?.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', errorMessage);
            
            // –î–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            let userMessage = '–û—à–∏–±–∫–∞: ' + errorMessage;
            
            if (errorMessage.includes('–í–∫–ª–∞–¥–∫–∞-–∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')) {
                userMessage += '\n\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Ç–∫—Ä—ã—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ Cisco Finesse:\n' +
                              'https://ssial000ap008.si.rt.ru:8445/desktop/container/';
            } else if (errorMessage.includes('–î–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–º –∑–≤–æ–Ω–∫–µ –µ—â–µ –Ω–µ –±—ã–ª–∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã')) {
                userMessage += '\n\n–°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –∑–≤–æ–Ω–æ–∫ –≤ Cisco Finesse,\n' +
                              '–∑–∞—Ç–µ–º –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
            }
            
            alert(userMessage);
            
            button.innerText = '–û—à–∏–±–∫–∞!';
            button.style.backgroundColor = '#dc3545';
            
            setTimeout(() => {
                button.innerText = originalText;
                button.disabled = false;
                button.style.backgroundColor = '';
            }, 2000);
        }
    });
}

/**
 * –í—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø–æ–ª–µ "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π".
 * @param {object} callData - –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –∑–≤–æ–Ω–∫–µ.
 */
function pasteDataIntoComment(callData) {
    console.log('üìù –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...');
    
    let commentTextarea = document.getElementById('comment_');
    if (!commentTextarea) {
        console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (#comment_)');
        // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –¥—Ä—É–≥–∏–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º
        const alternativeSelectors = [
            'textarea[name="comment"]',
            'textarea[id*="comment"]',
            '.form-control[placeholder*="–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"]',
            'textarea.form-control'
        ];
        
        for (const selector of alternativeSelectors) {
            const element = document.querySelector(selector);
            if (element) {
                console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –ø–æ–ª–µ:', selector);
                commentTextarea = element;
                break;
            }
        }
        
        if (!commentTextarea) {
            alert('–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è');
            return;
        }
    }
    
    insertDataIntoField(commentTextarea, callData);
}

/**
 * –í—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –ø–æ–ª–µ
 */
function insertDataIntoField(field, callData) {
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫—Ä–∞—Å–∏–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
    const formattedData = `--------------------------------
–î–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∑–≤–æ–Ω–∫–µ:
- –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${callData.phone}
- –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${callData.duration}
- –†–µ–≥–∏–æ–Ω: ${callData.region}
- –í—Ä–µ–º—è —Ñ–∏–∫—Å–∞—Ü–∏–∏: ${callData.capturedAt}
--------------------------------`;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    const currentValue = field.value;
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞—á–∞–ª–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    field.value = formattedData.trim() + '\n\n' + currentValue;
    
    // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –≤ –∫–æ–Ω–µ—Ü
    field.focus();
    field.setSelectionRange(field.value.length, field.value.length);
    
    // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã
    field.dispatchEvent(new Event('input', { bubbles: true }));
    field.dispatchEvent(new Event('change', { bubbles: true }));
    
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –ø–æ–ª–µ');
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
 */
function showDiagnosticInfo() {
    console.group('üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è');
    console.log('URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', window.location.href);
    console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã:');
    console.log('- –ö–Ω–æ–ø–∫–∏:', Array.from(document.querySelectorAll('button')).map(b => ({
        id: b.id,
        class: b.className,
        text: b.innerText
    })));
    console.log('- –¢–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è:', Array.from(document.querySelectorAll('textarea')).map(t => ({
        id: t.id,
        name: t.name,
        class: t.className
    })));
    console.groupEnd();
}

/**
 * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏
 * –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏–∑ –∫–æ–Ω—Å–æ–ª–∏: recreateHelperButton()
 */
window.recreateHelperButton = function() {
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏...');
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll('.oprosnik-helper-btn').forEach(btn => {
        console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º:', btn);
        btn.remove();
    });
    
    // –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º
    createPasteButton();
};

// –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.debugOprosnikHelper = function() {
    console.group('üêõ Debug Oprosnik Helper');
    console.log('–ö–Ω–æ–ø–∫–∞ "–û—Ç–≤–µ—Ç–∏—Ç—å":', document.getElementById('create_inst'));
    console.log('–ù–∞—à–∞ –∫–Ω–æ–ø–∫–∞:', document.querySelector('.oprosnik-helper-btn'));
    console.log('Chrome API:', typeof chrome !== 'undefined' && chrome.runtime);
    console.log('Extension ID:', chrome.runtime?.id);
    console.groupEnd();
};

// ===== –ó–ê–ü–£–°–ö =====
console.log('üèÅ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è...');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API
const apiInitialized = initializeMessageAPI();
console.log('üì° API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', apiInitialized);

// –ñ–¥–µ–º, –ø–æ–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
if (document.readyState === 'loading') {
    console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM...');
    document.addEventListener('DOMContentLoaded', () => {
        console.log('‚úÖ DOM –∑–∞–≥—Ä—É–∂–µ–Ω');
        createPasteButton();
    });
} else {
    console.log('‚úÖ DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
    createPasteButton();
}

console.log('‚úÖ Oprosnik Helper: Filler Script –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω');