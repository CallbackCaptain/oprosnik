/**
 * background.js - –í–µ—Ä—Å–∏—è —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π –∏ –∞–≤—Ç–æ–∏–Ω—ä–µ–∫—Ü–∏–µ–π
 * "–ú–æ–∑–≥–æ–≤–æ–π —Ü–µ–Ω—Ç—Ä" —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è.
 * –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –æ–±–º–µ–Ω –¥–∞–Ω–Ω—ã–º–∏ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏.
 */

console.log('üöÄ Oprosnik Helper: Background Service Worker Started.', new Date().toISOString());

// –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
chrome.runtime.onInstalled.addListener((details) => {
    console.log('üì¶ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ/–æ–±–Ω–æ–≤–ª–µ–Ω–æ:', details.reason);
    
    // –ü—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (details.reason === 'update') {
        console.log('üîÑ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã.');
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ content script
async function isContentScriptLoaded(tabId) {
    try {
        // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const response = await chrome.tabs.sendMessage(tabId, { action: 'ping' });
        return true;
    } catch (error) {
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –∏–Ω—ä–µ–∫—Ü–∏–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤
async function injectContentScripts(tabId) {
    console.log(`üíâ –ò–Ω—ä–µ–∫—Ü–∏—è content scripts –≤ —Ç–∞–±—É ${tabId}...`);
    
    try {
        // –°–Ω–∞—á–∞–ª–∞ –∏–Ω—ä–µ–∫—Ç–∏—Ä—É–µ–º parser.js
        await chrome.scripting.executeScript({
            target: { tabId: tabId },
            files: ['scripts/parser.js']
        });
        
        console.log('‚úÖ parser.js —É—Å–ø–µ—à–Ω–æ –∏–Ω—ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω');
        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω—ä–µ–∫—Ü–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', error);
        return false;
    }
}

// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    if (request.action === 'test') {
        console.log('üß™ –ü–æ–ª—É—á–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç:', sender.tab?.url || 'unknown');
        sendResponse({ status: 'success', message: 'Background service —Ä–∞–±–æ—Ç–∞–µ—Ç' });
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∑–≤–æ–Ω–∫–µ
    if (request.action === 'getCallData') {
        console.log('üì® Background: –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–∞–Ω–Ω—ã–µ –æ—Ç filler.js');
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º async/await –¥–ª—è –±–æ–ª–µ–µ —á–∏—Å—Ç–æ–≥–æ –∫–æ–¥–∞
        (async () => {
            try {
                // 1. –ù–∞—Ö–æ–¥–∏–º –≤–∫–ª–∞–¥–∫—É-–∏—Å—Ç–æ—á–Ω–∏–∫ (–ø–∞—Ä—Å–µ—Ä)
                const tabs = await chrome.tabs.query({
                    url: "https://ssial000ap008.si.rt.ru:8445/desktop/container/*"
                });
                
                console.log(`üîç –ù–∞–π–¥–µ–Ω–æ –≤–∫–ª–∞–¥–æ–∫ Finesse: ${tabs.length}`);
                
                if (tabs.length === 0) {
                    console.error('‚ùå Background: –í–∫–ª–∞–¥–∫–∞ —Å Finesse –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                    sendResponse({ 
                        status: 'error', 
                        message: '–í–∫–ª–∞–¥–∫–∞ Cisco Finesse –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∞.' 
                    });
                    return;
                }
                
                const parserTab = tabs[0];
                console.log(`‚úÖ Background: –ù–∞–π–¥–µ–Ω–∞ –≤–∫–ª–∞–¥–∫–∞-–ø–∞—Ä—Å–µ—Ä:`, {
                    id: parserTab.id,
                    url: parserTab.url,
                    status: parserTab.status
                });
                
                // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ content script
                const isLoaded = await isContentScriptLoaded(parserTab.id);
                
                if (!isLoaded) {
                    console.log('‚ö†Ô∏è Content script –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –∏–Ω—ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å...');
                    
                    // –ü—Ä–æ–±—É–µ–º –∏–Ω—ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç
                    const injected = await injectContentScripts(parserTab.id);
                    
                    if (!injected) {
                        sendResponse({ 
                            status: 'error', 
                            message: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Finesse. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É Finesse –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.' 
                        });
                        return;
                    }
                    
                    // –î–∞–µ–º —Å–∫—Ä–∏–ø—Ç—É –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
                    await new Promise(resolve => setTimeout(resolve, 500));
                }
                
                // 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥ –≤ parser.js
                console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ parser.js...');
                
                chrome.tabs.sendMessage(parserTab.id, { action: 'parseCallData' }, (response) => {
                    if (chrome.runtime.lastError) {
                        console.error('‚ùå Background: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ parser.js:', chrome.runtime.lastError.message);
                        
                        // –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                        let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Finesse.';
                        
                        if (chrome.runtime.lastError.message.includes('context invalidated')) {
                            errorMessage += ' –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.';
                        } else if (chrome.runtime.lastError.message.includes('Receiving end does not exist')) {
                            errorMessage += ' –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É Finesse.';
                        }
                        
                        sendResponse({ 
                            status: 'error', 
                            message: errorMessage 
                        });
                        return;
                    }
                    
                    console.log('‚úÖ Background: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç parser.js:', response);
                    
                    // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ filler.js
                    sendResponse(response);
                });
                
            } catch (error) {
                console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ background.js:', error);
                sendResponse({ 
                    status: 'error', 
                    message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ' + error.message 
                });
            }
        })();
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º true –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        return true;
    }
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
chrome.runtime.onConnect.addListener((port) => {
    console.log('üîå –ù–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:', {
        name: port.name,
        sender: port.sender?.tab?.url || 'unknown'
    });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ (–º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ service worker)
globalThis.diagnoseTabs = async function() {
    console.group('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤–∫–ª–∞–¥–æ–∫');
    
    const allTabs = await chrome.tabs.query({});
    const finesseTabs = allTabs.filter(tab => tab.url?.includes('ssial000ap008.si.rt.ru'));
    const oprosnikTabs = allTabs.filter(tab => tab.url?.includes('ctp.rt.ru/quiz'));
    
    console.log('–í—Å–µ–≥–æ –≤–∫–ª–∞–¥–æ–∫:', allTabs.length);
    console.log('–í–∫–ª–∞–¥–∫–∏ Finesse:', finesseTabs.map(t => ({
        id: t.id,
        url: t.url,
        status: t.status
    })));
    console.log('–í–∫–ª–∞–¥–∫–∏ –æ–ø—Ä–æ—Å–Ω–∏–∫–∞:', oprosnikTabs.map(t => ({
        id: t.id,
        url: t.url,
        status: t.status
    })));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É content scripts
    for (const tab of finesseTabs) {
        const loaded = await isContentScriptLoaded(tab.id);
        console.log(`Finesse tab ${tab.id}: content script ${loaded ? '‚úÖ –∑–∞–≥—Ä—É–∂–µ–Ω' : '‚ùå –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω'}`);
    }
    
    console.groupEnd();
};

console.log('‚úÖ Background service worker –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω');
console.log('üí° –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: diagnoseTabs()');